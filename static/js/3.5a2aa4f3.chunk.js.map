{"version":3,"sources":["../node_modules/@material-ui/icons/Image.js","../node_modules/@material-ui/icons/Lock.js","../node_modules/@material-ui/icons/Email.js","../node_modules/@material-ui/icons/ExitToApp.js","redux/actions/signout.js","components/auth/editEmailForm/initialValues.js","components/auth/editEmailForm/validationSchema.js","components/auth/editEmailForm/EditEmailFormInputs.jsx","components/auth/editEmailForm/EditEmailForm.jsx","components/auth/editPasswordForm/EditPasswordFormInputs.jsx","components/auth/editPasswordForm/initialValues.js","components/auth/editPasswordForm/validationSchema.js","components/auth/editPasswordForm/EditPasswordForm.jsx","components/auth/editUserForm/EditUserFormInputs.jsx","components/auth/editUserForm/initialValues.js","components/auth/editUserForm/validationSchema.js","components/auth/editUserForm/EditUserForm.jsx","pages/Settings.jsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","signoutAction","type","initialValues","email","password","validationSchema","yup","shape","max","required","min","EditEmailFormInputs","useState","viewPassword","setViewPassword","Grid","container","spacing","className","item","xs","variant","fullWidth","label","name","autoComplete","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","prev","withWidth","width","open","handleClose","handleSnack","useContext","AuthContext","reAuth","verifyBeforeUpdateEmail","loading","setLoading","values","actions","a","setSubmitting","Dialog","onClose","aria-labelledby","maxWidth","fullScreen","isWidthDown","DialogTitle","DialogContent","onSubmit","Box","Button","color","disabled","EditPasswordFormInputs","handleClickShowPassword","hidden","oldpassword","passwordConfirmation","oneOf","updatePassword","EditUserFormInputs","autoFocus","split","firstName","lastName","currentUser","updateUser","displayName","Settings","dispatch","useDispatch","viewEditEmailForm","setViewEditEmailForm","viewEditPasswordForm","setViewEditPasswordForm","viewEditUserForm","setViewEditUserForm","viewEditEmailSnack","setViewEditEmailSnack","viewEditPasswordSnack","setViewEditPasswordSnack","viewEditUserSnack","setViewEditUserSnack","signout","handleEditEmailForm","useCallback","handleEditPasswordForm","handleEditUserForm","handleCloseEditEmailSnack","handleCloseEditPasswordSnack","handleCloseEditUserSnack","Fragment","SnackPopup","message","List","ListItem","ListItemText","button","ListItemAvatar","Avatar","primary"],"mappings":"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","file":"static/js/3.5a2aa4f3.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"\n}), 'Image');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'ExitToApp');\n\nexports.default = _default;","const signoutAction = () => ({\r\n  type: 'USER_SIGNOUT',\r\n});\r\n\r\nexport default signoutAction;\r\n","const initialValues = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nexport default initialValues;\r\n","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email('Введите адрес электронной почты')\r\n    .max(254, 'Максимальная длина адреса 254 символа')\r\n    .required('Необходимо указать адрес эл. почты'),\r\n  password: yup\r\n    .string('Введите пароль')\r\n    .min(6, 'Минимальная длина пароля 6 символов')\r\n    .max(30, 'Максимальная длина пароля 30 символов')\r\n    .required('Введите пароль'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\nimport { MyTextField } from '../../CustomInputs';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nfunction EditEmailFormInputs() {\r\n  const [viewPassword, setViewPassword] = React.useState(false);\r\n\r\n  const handleClickShowPassword = () => setViewPassword((prev) => !prev);\r\n\r\n  return (\r\n    <Grid container spacing={3} className=\"auth__inputs\">\r\n      <Grid item xs={12}>\r\n        <MyTextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label=\"Email адрес\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MyTextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Пароль\"\r\n          type={viewPassword ? 'text' : 'password'}\r\n          autoComplete=\"current-password\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"Показать пароль\"\r\n                  onClick={handleClickShowPassword}>\r\n                  {viewPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default EditEmailFormInputs;\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport initialValues from './initialValues';\r\nimport validationSchema from './validationSchema';\r\nimport EditEmailFormInputs from './EditEmailFormInputs';\r\nimport { AuthContext } from '../../../contexts/AuthContext';\r\n\r\nfunction EditEmailForm({ width, open, handleClose, handleSnack }) {\r\n  const { reAuth, verifyBeforeUpdateEmail } = React.useContext(AuthContext);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  async function handleSubmit(values, actions) {\r\n    setLoading(true);\r\n    handleSnack(true);\r\n    handleClose();\r\n    actions.setSubmitting(false);\r\n    await reAuth(values.password);\r\n    await verifyBeforeUpdateEmail(values.email);\r\n  }\r\n\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-email\"\r\n      className=\"pupil-form__dialog\"\r\n      maxWidth=\"sm\"\r\n      fullScreen={isWidthDown('sm', width) ? true : false}>\r\n      <DialogTitle>Введите новый адрес электронной почты</DialogTitle>\r\n      <DialogContent className=\"lesson-form__dialog-content\">\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}>\r\n          <Form>\r\n            <EditEmailFormInputs />\r\n            <Box className=\"lesson-form__controls\">\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n                Закрыть\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={loading}>\r\n                Подтвердить\r\n              </Button>\r\n            </Box>\r\n          </Form>\r\n        </Formik>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default withWidth()(EditEmailForm);\r\n","import React from 'react';\r\n\r\nimport { Grid, InputAdornment, IconButton } from '@material-ui/core';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nimport { MyTextField } from '../../CustomInputs';\r\n\r\nfunction EditPasswordFormInputs() {\r\n  const [viewPassword, setViewPassword] = React.useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setViewPassword((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3} className=\"auth__inputs\">\r\n      <input type=\"text\" autoComplete=\"username\" hidden={true}></input>\r\n      <Grid item xs={12}>\r\n        <MyTextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          name=\"oldpassword\"\r\n          label=\"Старый пароль\"\r\n          type={viewPassword ? 'text' : 'password'}\r\n          autoComplete=\"current-password\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"Показать пароль\"\r\n                  onClick={handleClickShowPassword}>\r\n                  {viewPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MyTextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Новый пароль\"\r\n          type={viewPassword ? 'text' : 'password'}\r\n          autoComplete=\"new-password\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"Показать пароль\"\r\n                  onClick={handleClickShowPassword}>\r\n                  {viewPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MyTextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          name=\"passwordConfirmation\"\r\n          label=\"Повторите пароль\"\r\n          type={viewPassword ? 'text' : 'password'}\r\n          autoComplete=\"new-password\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"Показать пароль\"\r\n                  onClick={handleClickShowPassword}>\r\n                  {viewPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default EditPasswordFormInputs;\r\n","const initialValues = {\r\n  oldpassword: '',\r\n  password: '',\r\n  passwordConfirmation: '',\r\n}\r\n\r\nexport default initialValues;","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  oldpassword: yup\r\n    .string()\r\n    .min(6, 'Минимальная длина пароля 6 символов')\r\n    .max(30, 'Максимальная длина пароля 30 символов')\r\n    .required('Введите пароль'),\r\n  password: yup\r\n    .string()\r\n    .min(6, 'Минимальная длина пароля 6 символов')\r\n    .max(30, 'Максимальная длина пароля 30 символов')\r\n    .required('Введите пароль'),\r\n  passwordConfirmation: yup\r\n    .string()\r\n    .oneOf([yup.ref('password'), null], 'Пароли должны совпадать')\r\n    .min(6, 'Минимальная длина пароля 6 символов')\r\n    .max(30, 'Максимальная длина пароля 30 символов')\r\n    .required('Введите пароль'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport EditPasswordFormInputs from './EditPasswordFormInputs';\r\nimport initialValues from './initialValues';\r\nimport validationSchema from './validationSchema';\r\nimport { AuthContext } from '../../../contexts/AuthContext';\r\n\r\nfunction EditPasswordForm({ width, open, handleClose, handleSnack }) {\r\n  const { reAuth, updatePassword } = React.useContext(AuthContext);\r\n\r\n  async function handleSubmit(values, actions) {\r\n    actions.setSubmitting(false);\r\n    handleSnack(true);\r\n    handleClose();\r\n\r\n    await reAuth(values.oldpassword);\r\n    updatePassword(values.passwordConfirmation);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-email\"\r\n      className=\"pupil-form__dialog\"\r\n      maxWidth=\"sm\"\r\n      fullScreen={isWidthDown('sm', width) ? true : false}>\r\n      <DialogTitle>Введите новый адрес электронной почты</DialogTitle>\r\n      <DialogContent className=\"lesson-form__dialog-content\">\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}>\r\n          <Form>\r\n            <EditPasswordFormInputs />\r\n            <Box className=\"lesson-form__controls\">\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n                Закрыть\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Подтвердить\r\n              </Button>\r\n            </Box>\r\n          </Form>\r\n        </Formik>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default withWidth()(EditPasswordForm);\r\n","import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { MyTextField } from '../../CustomInputs';\r\n\r\nfunction EditUserFormInputs() {\r\n  return (\r\n    <Grid container spacing={3} className=\"auth__inputs\">\r\n      <Grid item xs={12}>\r\n        <MyTextField\r\n          autoComplete=\"fname\"\r\n          name=\"firstName\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label=\"Имя\"\r\n          autoFocus\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <MyTextField\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          label=\"Фамилия\"\r\n          name=\"lastName\"\r\n          autoComplete=\"lname\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default EditUserFormInputs;\r\n","const initialValues = (name) => {\r\n  const [firstName, lastName] = name.split(' ');\r\n  return { firstName, lastName };\r\n};\r\n\r\nexport default initialValues;\r\n","import * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string('Введите имя')\r\n    .max(100, 'Имя не может быть длиннее 100 символов')\r\n    .required('Необходимо указать имя'),\r\n  lastName: yup\r\n    .string('Введите фамилию')\r\n    .max(100, 'Фамилия не может быть длиннее 100 символов')\r\n    .required('Необходимо указать фамилию'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\n\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport EditUserFormInputs from './EditUserFormInputs';\r\nimport initialValues from './initialValues';\r\nimport validationSchema from './validationSchema';\r\nimport { AuthContext } from '../../../contexts/AuthContext';\r\n\r\nfunction EditUserForm({ width, open, handleClose, handleSnack }) {\r\n  const { currentUser, updateUser } = React.useContext(AuthContext);\r\n\r\n  function handleSubmit(values, actions) {\r\n    actions.setSubmitting(false);\r\n    handleSnack(true);\r\n    handleClose();\r\n\r\n    const name = values.firstName + ' ' + values.lastName;\r\n    updateUser(name);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-email\"\r\n      className=\"pupil-form__dialog\"\r\n      maxWidth=\"sm\"\r\n      fullScreen={isWidthDown('sm', width) ? true : false}>\r\n      <DialogTitle>Измените имя и фамилию</DialogTitle>\r\n      <DialogContent className=\"lesson-form__dialog-content\">\r\n        <Formik\r\n          initialValues={initialValues(currentUser.displayName)}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}>\r\n          <Form>\r\n            <EditUserFormInputs />\r\n            <Box className=\"lesson-form__controls\">\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={handleClose}>\r\n                Закрыть\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                Подтвердить\r\n              </Button>\r\n            </Box>\r\n          </Form>\r\n        </Formik>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default withWidth()(EditUserForm);\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\nimport SnackPopup from '../components/SnackPopup';\r\nimport signoutAction from '../redux/actions/signout';\r\nimport EditEmailForm from '../components/auth/editEmailForm/EditEmailForm';\r\nimport EditPasswordForm from '../components/auth/editPasswordForm/EditPasswordForm';\r\nimport EditUserForm from '../components/auth/editUserForm/EditUserForm';\r\n\r\nfunction Settings() {\r\n  const dispatch = useDispatch();\r\n  const [viewEditEmailForm, setViewEditEmailForm] = React.useState(false);\r\n  const [viewEditPasswordForm, setViewEditPasswordForm] = React.useState(false);\r\n  const [viewEditUserForm, setViewEditUserForm] = React.useState(false);\r\n\r\n  const [viewEditEmailSnack, setViewEditEmailSnack] = React.useState(false);\r\n  const [viewEditPasswordSnack, setViewEditPasswordSnack] = React.useState(false);\r\n  const [viewEditUserSnack, setViewEditUserSnack] = React.useState(false);\r\n\r\n  const { signout, currentUser } = React.useContext(AuthContext);\r\n\r\n  const handleEditEmailForm = React.useCallback(() => setViewEditEmailForm(false), []);\r\n  const handleEditPasswordForm = React.useCallback(() => setViewEditPasswordForm(false), []);\r\n  const handleEditUserForm = React.useCallback(() => setViewEditUserForm(false), []);\r\n  const handleCloseEditEmailSnack = React.useCallback(() => setViewEditEmailSnack(false), []);\r\n  const handleCloseEditPasswordSnack = React.useCallback(() => setViewEditPasswordSnack(false), []);\r\n  const handleCloseEditUserSnack = React.useCallback(() => setViewEditUserSnack(), []);\r\n\r\n  async function handleSignout() {\r\n    await signout();\r\n    dispatch(signoutAction());\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <EditEmailForm\r\n        open={viewEditEmailForm}\r\n        handleClose={handleEditEmailForm}\r\n        handleSnack={setViewEditEmailSnack}\r\n      />\r\n\r\n      <EditPasswordForm\r\n        open={viewEditPasswordForm}\r\n        handleClose={handleEditPasswordForm}\r\n        handleSnack={setViewEditPasswordSnack}\r\n      />\r\n\r\n      <EditUserForm\r\n        open={viewEditUserForm}\r\n        handleClose={handleEditUserForm}\r\n        handleSnack={setViewEditUserSnack}\r\n      />\r\n\r\n      <SnackPopup\r\n        open={viewEditEmailSnack}\r\n        message={'Пожалуйста, проверьте почту и войдите в личный кабинет заново'}\r\n        onClose={handleCloseEditEmailSnack}\r\n      />\r\n\r\n      <SnackPopup\r\n        open={viewEditPasswordSnack}\r\n        message={'Пароль успешно изменен'}\r\n        onClose={handleCloseEditPasswordSnack}\r\n      />\r\n\r\n      <SnackPopup\r\n        open={viewEditUserSnack}\r\n        message={'Пожалуйста, проверьте почту и войдите в личный кабинет заново'}\r\n        onClose={handleCloseEditUserSnack}\r\n      />\r\n\r\n      <List className=\"settings__container\">\r\n        <ListItem>\r\n          <ListItemText>email: {currentUser.email}</ListItemText>\r\n        </ListItem>\r\n        <ListItem button onClick={() => setViewEditUserForm(true)}>\r\n          <ListItemAvatar>\r\n            <Avatar className=\"settings__avatar\">\r\n              <ImageIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Редактировать профиль\" />\r\n        </ListItem>\r\n        <ListItem button onClick={() => setViewEditPasswordForm(true)}>\r\n          <ListItemAvatar>\r\n            <Avatar className=\"settings__avatar\">\r\n              <LockIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Изменить пароль\" />\r\n        </ListItem>\r\n        <ListItem button onClick={() => setViewEditEmailForm(true)}>\r\n          <ListItemAvatar>\r\n            <Avatar className=\"settings__avatar\">\r\n              <EmailIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Изменить email\" />\r\n        </ListItem>\r\n        <ListItem button onClick={handleSignout}>\r\n          <ListItemAvatar>\r\n            <Avatar className=\"settings__avatar\">\r\n              <ExitToAppIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Выйти из аккаунта\" />\r\n        </ListItem>\r\n      </List>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"sourceRoot":""}